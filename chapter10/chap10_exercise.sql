--CHAPTER10 DML
--10-1
CREATE TABLE DEPT_TEMP
    AS SELECT * FROM DEPT;

--10-2
SELECT * FROM DEPT_TEMP;

--1분 복습 EMP_TEMP10 생성
CREATE TABLE EMP_TEMP10
    AS SELECT * FROM EMP;

SELECT * FROM EMP_TEMP10;

--10-3 데이터 추가하기
INSERT INTO DEPT_TEMP (DEPTNO, DNAME, LOC)
            VALUES(50, 'DATABASE', 'SEOUL');--커밋(영구반영)전엔 런 sql에 반영 X
            
SELECT *FROM DEPT_TEMP;
COMMIT;

--INSERT 오류
INSERT INTO DEPT_TEMP (DEPTNO, DNAME, LOC)
            VALUES(60, 'NETWORK');--입력 갯수 안맞다는 오류(적음) not enough values

INSERT INTO DEPT_TEMP (DEPTNO, DNAME, LOC)
            VALUES(60, 'NETWORK', 'BUSAN', 'WRONG');--입력 갯수 안맞다는 오류(많음) too many values

INSERT INTO DEPT_TEMP (DEPTNO, DNAME, LOC)
            VALUES('WRONG', 'NETWORK', 'BUSAN');  --자료형 안맞다는 오류 invalid number

INSERT INTO DEPT_TEMP (DEPTNO, DNAME, LOC)
            VALUES(600, 'NETWORK', 'BUSAN');--입력값으 사이즈 오류 value larger than specified precision allowed for this column

--10-4 열지정 없이 데이터 추가하기
INSERT INTO DEPT_TEMP
            VALUES(60, 'NETWORK', 'BUSAN');
COMMIT;
SELECT * FROM DEPT_TEMP;

--10-5 NULL값 명시적 지정하여 입력
INSERT INTO DEPT_TEMP(DEPTNO, DNAME, LOC)
    VALUES(70, 'WEB', NULL); --NULL값 입력시 '' 넣으면 문자열로 인식해버림
COMMIT;
SELECT * FROM DEPT_TEMP;

INSERT INTO DEPT_TEMP(DEPTNO, DNAME, LOC)
    VALUES(70, 'WEB', 'NULL');  --NULL값 입력시 '' 넣으면 문자열로 인식해버림
SELECT * FROM DEPT_TEMP;
ROLLBACK; --커밋전에 되돌리기 가능

INSERT INTO DEPT_TEMP(DEPTNO, DNAME, LOC)
    VALUES(80, 'MOBILE', '');--= NULL값 입력 띄어쓰기 하면 똑같이 문자열로 인식함
COMMIT;

--10-7 열을 명시하지 않고 INSERT 문
INSERT INTO DEPT_TEMP(DEPTNO, LOC)
        VALUES (90, 'INCHEON');
COMMIT;

--10-8
CREATE TABLE EMP_TEMP
    AS SELECT * FROM EMP WHERE 1<>1;--WHERE조건이 FULSE면 아무것도 조회 안됨 => 겁데기만 생성 가능

SELECT * FROM EMP_TEMP;

SELECT * FROM EMP WHERE 1=1; --입력값이 존재하면 AND 만 붙여주면 전부 조회가능, 1=1없으면다른로직써야 조회가능

SELECT * FROM EMP WHERE 1=1--  <= 이런식으로 AND 없으면 전부 조회됨
AND HIREDATE = ' 1981/04/02'
AND ENAME = 'JONES';

--10-9 INSERT 문으로 날짜 데이터 입력)날짜사이에 / 입력)
INSERT INTO EMP_TEMP
(EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
VALUES(9999, '홀길동', 'PRESIDENT', NULL, '2001/01/01'
    , 5000, 1000, 10);
COMMIT;

SELECT * FROM EMP_TEMP;
INSERT INTO EMP_TEMP
(EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
VALUES(1111, '성춘향', 'MANAGER', 9999, '2001-01-05', 4000, NULL, 20);
SELECT * FROM EMP_TEMP;
COMMIT;

--날짜 데이터 입력 시 유의점
--년월일 반대로 일/월/년 => 오류발생
INSERT INTO EMP_TEMP(EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
VALUES(2111, '이순신', 'MANAGER', 9999, '07/01/2001',4000, NULL, 20);
--오류메시지 date format picture ends before converting entire input string

--10-12 TO_DATE
INSERT INTO EMP_TEMP(EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
VALUES(2111, '이순신', 'MANAGER', 9999, TO_DATE('07/01/2001', 'DD/MM/YYYY'),4000, NULL, 20);
--TO_DATE('07/01/2001', 'DD/MM/YYYY') 형변환 해주면 입력 가능해짐

SELECT SYSDATE FROM DUAL;

--10-13
INSERT INTO EMP_TEMP(EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
VALUES(3111, '심청이', ' MANAGER', 9999, SYSDATE, 4000, NULL, 30);

SELECT EMPNO, ENAME, TO_CHAR(HIREDATE, 'YYYY/MM/DD HH24:MI:SS') FROM EMP_TEMP;

COMMIT;
SELECT * FROM EMP_TEMP;

--서브쿼리로 여러 데이터 추가하기
--10-14
INSERT INTO EMP_TEMP(EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
    SELECT E.EMPNO, E.ENAME, E.JOB, E.MGR, E.HIREDATE, E.SAL, E.COMM, E.DEPTNO
      FROM EMP E, SALGRADE S
     WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL
       AND S.GRADE = 1;

--INSERT 문에서 서브쿼리 사용할때 주의할점
--VALUES절은 사용하지 않는다
-- 컬럼수와 자료형은 일치해야한다.

INSERT INTO COUNTRIES(COUNTRY_ID, COUNTRY_NAME, REGION_ID)
    VALUES('AT', 'Austria', 1);
INSERT INTO COUNTRIES(COUNTRY_ID, COUNTRY_NAME, REGION_ID)
    VALUES('NO', 'Norway', 1);
INSERT INTO COUNTRIES(COUNTRY_ID, COUNTRY_NAME, REGION_ID)
    VALUES('ID', 'Indonesia', 3);
INSERT INTO COUNTRIES(COUNTRY_ID, COUNTRY_NAME, REGION_ID)
    VALUES('TR', 'Turkey', 4);
SELECT * FROM COUNTRIES;--25--29

SELECT * FROM DEPARTMENTS;--27--31
INSERT INTO DEPARTMENTS(DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
    VALUES(280, 'Advertising', 200, 1700);
INSERT INTO DEPARTMENTS(DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
    VALUES(290, 'Sales Support', 145, 1700);
INSERT INTO DEPARTMENTS(DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
    VALUES(300, 'Education', NULL, 1700);
INSERT INTO DEPARTMENTS(DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
    VALUES(310, 'E-Commerce', NULL, 1700);

SELECT * FROM DEPARTMENTS ORDER BY DEPARTMENT_ID;
COMMIT;

--10-2절  테이블에 있는 데이터 수정하기
CREATE TABLE DEPT_TEMP2
    AS SELECT * FROM DEPT;
 --CREATE 는 롤백이 안됨
SELECT * FROM DEPT_TEMP2;

--10-16
UPDATE DEPT_TEMP2
   SET LOC = 'SEOUL';  --전부다 바뀌어버림 

ROLLBACK;
SELECT * FROM DEPT_TEMP2;

SELECT * FROM DEPT_TEMP2
 WHERE DEPTNO = 40;
 
UPDATE DEPT_TEMP2
   SET DNAME = 'DATABASE'
     , LOC = 'SEOUL'
 WHERE DEPTNO = 40;
COMMIT;

--1분 복습 EMP_TEMP 테이블의 사원중에서 급여가 2500 이하인 사원 만 추가수당 50으로 수정

UPDATE EMP_TEMP
   SET COMM = 50
 WHERE SAL <= 2500;

SELECT * FROM EMP_TEMP
 WHERE SAL <= 2500;

COMMIT;

--서브쿼리 사용 수정
--10-19
SELECT * 
  FROM DEPT_TEMP2
 WHERE DEPTNO = 40;

SELECT * 
  FROM DEPT
 WHERE DEPTNO = 40;
--40	OPERATIONS	BOSTON

SELECT DNAME, LOC 
  FROM DEPT
 WHERE DEPTNO = 40;
--40	OPERATIONS	BOSTON

UPDATE DEPT_TEMP2
   SET (DNAME, LOC) =(SELECT DNAME, LOC 
                        FROM DEPT
                       WHERE DEPTNO = 40)
 WHERE DEPTNO = 40;

SELECT * FROM DEPT_TEMP2;
--열 하나하나를 수정하는 경우
UPDATE DEPT_TEMP2
   SET DNAME = (SELECT DNAME FROM DEPT
                  WHERE DEPTNO = 40)
     , LOC = (SELECT LOC FROM DEPT
               WHERE DEPTNO = 40)
 WHERE DEPTNO = 40;

--UPDATE 문에 WHERE 절에 서브 쿼리 사용 가능

SELECT * FROM DEPT_TEMP2
WHERE DEPTNO = 40;

UPDATE DEPT_TEMP2
   SET LOC = 'SEOUL'
 WHERE DEPTNO = (SELECT DEPTNO
                   FROM DEPT_TEMP2
                  WHERE DNAME = 'OPERATIONS');

SELECT * FROM JOBS
 WHERE JOB_ID IN ('ADV', 'IT ENG', 'IT RES');

INSERT INTO JOBS
VALUES('ADV', 'Advisor', 10000, 20000);
INSERT INTO JOBS
VALUES('IT ENG', 'Engineer', 8000, 15000);
INSERT INTO JOBS
VALUES('IT RES', 'Researcher', 12000, 22000);

COMMIT;

SELECT DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID
  FROM DEPARTMENTS
 WHERE DEPARTMENT_ID >= 280;

ROLLBACK; 

UPDATE DEPARTMENTS 
   SET LOCATION_ID = 2000
 WHERE DEPARTMENT_ID IN(SELECT DEPARTMENT_ID
                           FROM DEPARTMENTS
                          WHERE DEPARTMENT_ID >= 280);
UPDATE DEPARTMENTS
   SET MANAGER_ID = 102 
 WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID
                        FROM DEPARTMENTS
                       WHERE MANAGER_ID IS NULL
                         AND DEPARTMENT_ID >= 280);

SELECT * FROM JOBS WHERE JOB_ID IN ('ADV', 'IT ENG', 'IT RES');

UPDATE JOBS
   SET MIN_SALARY = 12000, MAX_SALARY = 22000
 WHERE JOB_ID = 'ADV';

UPDATE JOBS
   SET MAX_SALARY = 16000
 WHERE JOB_ID = 'IT ENG';

UPDATE JOBS
   SET JOB_TITLE = 'Research Engineer', MAX_SALARY = 24000
 WHERE JOB_ID = 'IT RES';

COMMIT;

CREATE TABLE EMP_TEMP2
    AS SELECT * FROM EMP;

SELECT * FROM EMP_TEMP2;

SELECT *FROM EMP_TEMP2
 WHERE JOB = 'MANAGER';

--10-23 WHERER 절 사용해서 삭제
DELETE FROM EMP_TEMP2
 WHERE JOB = 'MANAGER';

SELECT * FROM EMP_TEMP2;

SELECT E.EMPNO
  FROM EMP_TEMP2 E, SALGRADE S
 WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL
   AND S.GRADE = 3
   AND E.DEPTNO = 30;
--7499
--7844

SELECT * 
  FROM EMP_TEMP2
 WHERE EMPNO IN (7499, 7844);

DELETE FROM EMP_TEMP2
 WHERE EMPNO IN (SELECT E.EMPNO
                   FROM EMP_TEMP2 E, SALGRADE S
                  WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL
                    AND S.GRADE = 3
                    AND E.DEPTNO = 30);

SELECT * FROM EMP_TEMP2;
COMMIT;

SELECT COUNT(*) FROM EMP_TEMP2;  --9  =>0 => 롤백 9건

--10-25
DELETE FROM EMP_TEMP2;  --9건 삭제
ROLLBACK;

DML  --INSERT, UPDATE, DELETE, DQL: SELECT


DDL -- TRUNCATE
TRUNCATE TABLE EMP_TEMP2;  --데이터만 삭제할수 있음, 잘라내기

--잊기전에 한번더
CREATE TABLE CHAP10HW_EMP
    AS SELECT * FROM EMP;
CREATE TABLE CHAP10HW_DEPT
    AS SELECT * FROM DEPT;
CREATE TABLE CHAP10HW_SALGRADE
    AS SELECT * FROM SALGRADE;
--Q1
SELECT * FROM CHAP10HW_DEPT;
INSERT INTO CHAP10HW_DEPT(DEPTNO, DNAME, LOC)
    VALUES( 50, 'ORACLE', 'BUSAN');
INSERT INTO CHAP10HW_DEPT(DEPTNO, DNAME, LOC)
    VALUES( 60, 'SQL', 'ILSAN');
INSERT INTO CHAP10HW_DEPT(DEPTNO, DNAME, LOC)
    VALUES( 70, 'SELECT', 'INCHEON');    
INSERT INTO CHAP10HW_DEPT(DEPTNO, DNAME, LOC)
    VALUES( 80, 'DML', 'BUNDANG');   
COMMIT;

--Q2
SELECT * FROM CHAP10HW_EMP;
INSERT INTO CHAP10HW_EMP VALUES(7201, 'TEST_USER1', 'MANAGER', 7788, TO_DATE('2016/01/02', 'YYYY/MM/DD'), 4500, NULL, 50);
INSERT INTO CHAP10HW_EMP VALUES(7202, 'TEST_USER2', 'CLERK', 7201, TO_DATE('2016-02-21', 'YYYY/MM/DD'), 1800, NULL, 50);
INSERT INTO CHAP10HW_EMP VALUES(7203, 'TEST_USER3', 'ANALYST', 7201, TO_DATE('20160411', 'YYYY/MM/DD'), 3400, NULL, 60);
INSERT INTO CHAP10HW_EMP VALUES(7204, 'TEST_USER4', 'SALESMAN', 7201, '2016/05/31', 2700, 300, 60);
INSERT INTO CHAP10HW_EMP VALUES(7205, 'TEST_USER5', 'CLERK', 7201, '20160720', 2600, NULL, 70);
INSERT INTO CHAP10HW_EMP VALUES(7206, 'TEST_USER6', 'CLERK', 7201, '2016-09-08', 2600, NULL, 70);
INSERT INTO CHAP10HW_EMP VALUES(7207, 'TEST_USER7', 'LECTURER', 7201, TO_DATE('2016/10/28', 'YYYY/MM/DD'), 2300, NULL, 80);
INSERT INTO CHAP10HW_EMP VALUES(7208, 'TEST_USER8', 'STUDENT', 7201, TO_DATE('2018/03/09', 'YYYY/MM/DD'), 1200, NULL, 80);

COMMIT;
--Q3
UPDATE CHAP10HW_EMP
   SET DEPTNO = 70
 WHERE SAL >(SELECT AVG(SAL)
               FROM CHAP10HW_EMP
              WHERE DEPTNO = 50);
SELECT * FROM CHAP10HW_EMP;
SELECT * FROM CHAP10HW_EMP WHERE DEPTNO = 70;

COMMIT;
--Q4
UPDATE CHAP10HW_EMP
   SET SAL = SAL*1.1, DEPTNO = 80
 WHERE HIREDATE > (SELECT MIN(HIREDATE)
                     FROM CHAP10HW_EMP
                    WHERE DEPTNO = 60);
SELECT * FROM CHAP10HW_EMP WHERE DEPTNO = 60;
SELECT * FROM CHAP10HW_EMP WHERE DEPTNO = 80;
COMMIT;


--Q5
DELETE FROM CHAP10HW_EMP
 WHERE EMPNO IN (SELECT E.EMPNO
                   FROM CHAP10HW_EMP E, CHAP10HW_SALGRADE S
                  WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL
                    AND S.GRADE = 5);
SELECT * FROM CHAP10HW_SALGRADE;
COMMIT;

SELECT *
  FROM CHAP10HW_EMP E, CHAP10HW_SALGRADE S
 WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL
   AND S.GRADE = 5;
