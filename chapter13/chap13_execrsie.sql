--13장--객체 종류
SELECT * FROM DBA_TABLES;--table or view does not exist  
--관리자 권한 없음   --SYSTEM계정으로 접속하면 볼수 있음

--데이터 베이스를 위한 데이터를 저장한 데이터 사전
--테이블: 1. 사용자 테이블  2. 데이터 사전
--13-1
SELECT * FROM DICT;
SELECT * FROM DICTIONARY;  --둘다 같은 내용

--USER_ 접두어를 가진 데이터 사전

SELECT TABLE_NAME
  FROM USER_TABLES
 ORDER BY TABLE_NAME;

SELECT OWNER, TABLE_NAME
  FROM ALL_TABLES;

SELECT * FROM DBA_USERS;

--INDEX = 데이터 위치 찾기 

--TABLE FULL SCAN = 데이터를 처음부터 끝까지 뒤져서(노가다) 찾는 방법
--INDEX SCAN = 인덱스(EX목차검색)를 통해서 찾는 방법

--13-8 HR계정이 소유한 인덱스 정보 조회
--인덱스 정보 조회
SELECT * 
  FROM USER_INDEXES 
 WHERE TABLE_NAME = 'EMP';
--인덱스 컬럼 조회
SELECT * 
  FROM USER_IND_COLUMNS 
 WHERE TABLE_NAME = 'EMP';

--13-10
--CREATE INDEX 생성할 이름 ON 테이블(열이름);
CREATE INDEX IDX_EMP_SAL
    ON EMP(SAL);

SELECT * FROM EMP WHERE EMPNO = 7369;

SELECT * FROM EMP WHERE ENAME = 'SMITH';

--인덱스 삭제  DROP INDEX  인덱스 이름
DROP INDEX IDX_EMP_SAL;

--단일 인덱스
CREATE INDEX IDX_EMP_SAL
    ON EMP(SAL);

--복합인덱스  -두개이상 열
CREATE INDEX IDX_EMP_SAL
    ON EMP(SAL,ENAME, ...);
    
--고유 인덱스 열에 중복 데이터가 없을 때 --UNIQUE  ->지정 안하면 비고유가 기본
CREATE UNIQUE INDEX IDX_EMP_SAL
    ON EMP(SAL);

--추가 --DDL
CREATE TABLE CUSTOMERS
( CUSTOMER_ID      NUMBER           NOT NULL PRIMARY KEY,
  FRIST_NAME        VARCHAR2(10)     NOT NULL,
  LAST_NAME         VARCHAR2(10)     NOT NULL,
  EMAIL             VARCHAR2(10),
  PHONE_NUMBER      VARCHAR2(20),
  REGIST_DATE       DATE
  );

--DML
INSERT INTO CUSTOMERS(CUSTOMER_ID, FRIST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, REGIST_DATE)
VALUES (1, 'JIHEON', 'HA', 'JIHEON@', '010-134-1234', '2024/06/13');

SELECT * FROM CUSTOMERS;

INSERT INTO CUSTOMERS(CUSTOMER_ID, FRIST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, REGIST_DATE)
VALUES (2, 'DAHYUN', 'LEE', 'DAHYUN@', '010-111-1234', '20240613');

INSERT INTO CUSTOMERS(CUSTOMER_ID, FRIST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, REGIST_DATE)
VALUES (3, 'JUHO', 'JEONG', 'JEONG@', '010-2222-1234', '2024-06-13');

INSERT INTO CUSTOMERS(CUSTOMER_ID, FRIST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, REGIST_DATE)
VALUES (4, 'HANUL', 'LEE', 'HANUL@', '010-3333-1234', '2024-06-13');

SELECT * FROM USER_INDEXES
  WHERE TABLE_NAME = 'CUSTOMERS';

SELECT * FROM USER_IND_COLUMNS
  WHERE TABLE_NAME = 'CUSTOMERS';

CREATE INDEX IDX_CUSTOMER_REGISTDATE
    ON CUSTOMERS(REGIST_DATE);

SELECT *
  FROM CUSTOMERS
 WHERE REGIST_DATE = '2024/06/13';

--고유 인덱스
CREATE UNIQUE INDEX IDX_CUSTOMER_EMAIL
    ON CUSTOMERS ( EMAIL);

--복습문제
CREATE TABLE PRODUCTS
            ( PRODUCT_ID        NUMBER       NOT NULL PRIMARY KEY,
              PRODUCT_NAME      VARCHAR2(10) NOT NULL,
              REG_DATE          DATE,
              WEIGHT            NUMBER(7,2),
              PRICE             NUMBER
              );

DESC PRODUCTS;

INSERT INTO PRODUCTS(PRODUCT_ID, PRODUCT_NAME, REG_DATE, WEIGHT, PRICE)
VALUES(1, 'Computer', '20210101', 10, 1600000);
INSERT INTO PRODUCTS(PRODUCT_ID, PRODUCT_NAME, REG_DATE, WEIGHT, PRICE)
VALUES(2, 'Smartphone', '2021/0201', 0.2, 1000000);
INSERT INTO PRODUCTS(PRODUCT_ID, PRODUCT_NAME, REG_DATE, WEIGHT, PRICE)
VALUES(3, 'Television', '2021-01-01', 20, 2000000);

SELECT * FROM PRODUCTS;

--13-3
--VIEW: 가상 테이블 

SELECT * FROM EMP_DETAILS_VIEW;


SELECT E.FIRST_NAME || ' ' || E.LAST_NAME AS 직원명
     , E.DEPARTMENT_NAME
     , E.JOB_TITLE
     , MGR.FIRST_NAME || ' ' || MGR.LAST_NAME AS 관리자명
  FROM EMP_DETAILS_VIEW E, EMPLOYEES MGR  --뷰에서 보여줌(보안)
 WHERE E.MANAGER_ID = MGR.EMPLOYEE_ID;

--13-15
CREATE OR REPLACE VIEW VW_EMP20
    AS (SELECT EMPNO, ENAME, JOB, DEPTNO
          FROM EMP
         WHERE DEPTNO = 20);
         
SELECT * 
  FROM USER_VIEWS; 

SELECT VIEW_NAME, TEXT_LENGTH, TEXT
  FROM USER_VIEWS;

--13-18
SELECT *
  FROM VW_EMP20;

--1분 복습
--부서번호가 30인 사원정보의 모든 열을 출력하는 VM_EMP30ALL 뷰
--작성하는 SQL문 작성

CREATE OR REPLACE VIEW VM_EMP30ALL
    AS (SELECT *
          FROM EMP
         WHERE DEPTNO = 30);
         
SELECT * FROM VM_EMP30ALL;    


--뷰삭제
DROP VIEW VW_EMP20;

--인라인 뷰를 사용한 TOP-N SQL  = 위에서부터 몇개를 가져옴
--13-20  --ROWNUM을 추가로 조회하기
SELECT ROWNUM, E.*
  FROM EMP E;

--13-21 SAL 열 기준으로 정렬
SELECT ROWNUM, E.*
  FROM EMP E
 ORDER BY SAL DESC;

--ROWNUM은 조회후 넘버링이 아니라 넘버링후 조회이기 때문에 정렬시 숫자순서가 섞일수 있음
--단순뷰 : 하나의 테이블
--복합뷰 : 두개이상 테이블 조인해서 만든 뷰
--인라인뷰:SELECT FROM절에 기술된 SELECT 문
--13-22
SELECT ROWNUM, E.*
  FROM (SELECT * 
          FROM EMP
         ORDER BY SAL DESC) E;  --먼저 정렬하게 만든후 넘버링

WITH E AS 
( SELECT *
    FROM EMP
   ORDER BY SAL DESC)
SELECT ROWNUM, E.*
  FROM E;

SELECT ROWNUM, E.*
  FROM (SELECT * 
          FROM EMP
         ORDER BY SAL DESC) E
WHERE ROWNUM <= 3; --무조건 1부터 생성 >3 같은것을 쓰면 안나옴 (1이 포함되야함)

WITH E AS 
( SELECT *
    FROM EMP
   ORDER BY SAL DESC)
SELECT ROWNUM, E.*
  FROM E
 WHERE ROWNUM <= 3;  

SELECT EE.RN, EE.EMPNO, EE.ENAME, EE.SAL  --중간부터 가져오려면 한번더 감사줘야 가능
FROM( SELECT ROWNUM AS RN, E.*              --3중 쿼리  --실무
      FROM (SELECT * 
              FROM EMP
             ORDER BY SAL DESC) E) EE
    WHERE EE.RN BETWEEN 11 AND 14; 

--13-4절 시퀀스
--동시입력(중복입력 방지)
SELECT MAX(EMPNO) +1  --중복입력 가능성O
  FROM EMP;

CREATE TABLE DEPT_SEQUENCE
    AS SELECT *
         FROM DEPT
        WHERE 1 <> 1;
        
DROP TABLE DEPT_SEQUENCE;
--13-27
CREATE SEQUENCE SEQ_DEPT_SEQUENCE
    INCREMENT BY 10
    START WITH 10
    MAXVALUE 90
    MINVALUE 0
    NOCYCLE
    CACHE 2;

SELECT *
  FROM USER_SEQUENCES;

--시퀀스 사용 
INSERT INTO DEPT_SEQUENCE (DEPTNO, DNAME, LOC)
VALUES (SEQ_DEPT_SEQUENCE.NEXTVAL, 'DATABASE', 'SEOUL');

SELECT * FROM DEPT_SEQUENCE ORDER BY DEPTNO DESC;

SELECT SEQ_DEPT_SEQUENCE.NEXTVAL
  FROM DUAL;

SELECT SEQ_DEPT_SEQUENCE.CURRVAL
  FROM DUAL;

INSERT INTO DEPT_SEQUENCE (DEPTNO, DNAME, LOC)
VALUES (SEQ_DEPT_SEQUENCE.NEXTVAL, 'DATABASE', 'SEOUL');

--13-32
ALTER SEQUENCE SEQ_DEPT_SEQUENCE
INCREMENT BY 3
MAXVALUE 99
CYCLE;

SELECT * FROM USER_SEQUENCES;

--P356
--13-5절 동의어 SYNONYM

CREATE SYNONYM E
   FOR EMP;

SELECT * FROM E;

DROP SYNONYM E;


--Q1
CREATE TABLE EMPIDX
    AS (SELECT * FROM EMP WHERE 1<>1);

CREATE INDEX IDX_EMPIDX_EMPNO
    ON EMPIDX(EMPNO);

SELECT * FROM USER_INDEXES WHERE ENAME =;
SELECT * FROM USER_IND_COLUMNS;
--Q2
CREATE OR REPLACE VIEW  EMPIDX_OVER15K
    AS (SELECT EMPNO, ENAME, JOB, DEPTNO, SAL
             , NVL2(COM, 'O', 'X') AS COMM
         FROM EMPIDX
        WHERE SAL > 1500);

SELECT * FROM USER_VIEWS;

--Q3
CREATE TABLE DEPTSEQ
    AS SELECT * FROM DEPT;

CREATE SEQUENCE SEQ_DEPTSEQ
        START WITH 1
        INCREMENT BY 1
        MAXVALUE 99
        MINVALUE 1
        NOCYCLE 
        NOCACHE;


DESC DEPTSEQ;

INSERT INTO DEPTSEQ(DEPTNO, DNAME, LOC)
    VALUES(SEQ_DEPTSEQ.NEXTVAL, 'DATABASE', 'SEOUL');
INSERT INTO DEPTSEQ(DEPTNO, DNAME, LOC)
    VALUES(SEQ_DEPTSEQ.NEXTVAL, 'WEB', 'BUSAN');
INSERT INTO DEPTSEQ(DEPTNO, DNAME, LOC)
    VALUES(SEQ_DEPTSEQ.NEXTVAL, 'MOBILE', 'ILSAN');

SELECT * FROM DEPTSEQ;
ROLLBACK;